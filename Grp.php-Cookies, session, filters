Cookies, session, filters

Grp8.php


<?php

session_start();


// File to store user data

define('USER_DATA_FILE', 'users.json');


// Load users from the file

$users = [];

if (file_exists(USER_DATA_FILE)) {

    $users = json_decode(file_get_contents(USER_DATA_FILE), true) ?: [];

}


// Remember me cookie parameters

$cookie_name = "remember_me_token";

$cookie_expiry = time() + (86400 * 30); // 30 days


// Handle AJAX register and login form submissions

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])) {

    $response = ['status' => 'error', 'message' => 'Invalid request'];


    // Handle registration

    if ($_POST['action'] === 'register') {

        $username = filter_var($_POST['username'] ?? '', FILTER_SANITIZE_EMAIL);

        $password = filter_var($_POST['password'] ?? '', FILTER_SANITIZE_SPECIAL_CHARS);


        // Validate that the username ends with "@gmail.com"

        if (substr($username, -10) !== '@gmail.com') {

            $response['message'] = "Username must end with '@gmail.com'.";

        } elseif (isset($users[$username])) {

            $response['message'] = "Username is already taken.";

        } elseif (strlen($password) < 5 || strlen($password) > 10) {

            $response['message'] = "Password must be between 5 and 10 characters long.";

        } else {

            $users[$username] = password_hash($password, PASSWORD_DEFAULT);

            file_put_contents(USER_DATA_FILE, json_encode($users));

            $response = ['status' => 'success', 'message' => "Registration successful! You can now log in."];

        }

    }


    // Handle login

    if ($_POST['action'] === 'login') {

        $username = filter_var($_POST['username'] ?? '', FILTER_SANITIZE_EMAIL);

        $password = filter_var($_POST['password'] ?? '', FILTER_SANITIZE_SPECIAL_CHARS);

        $remember_me = isset($_POST['remember_me']) ? $_POST['remember_me'] : false;


        if (isset($users[$username]) && password_verify($password, $users[$username])) {

            $_SESSION['loggedin'] = true;

            $_SESSION['username'] = htmlspecialchars($username);


            // Set a remember me cookie if selected

            if ($remember_me) {

                $token = bin2hex(random_bytes(16));

                setcookie($cookie_name, $token, $cookie_expiry, "/", "", false, true);

                $users[$username]['remember_token'] = $token;

                file_put_contents(USER_DATA_FILE, json_encode($users));

            }


            $response = ['status' => 'success', 'message' => 'Login successful!'];

        } else {

            $response['message'] = "Invalid username or password.";

        }

    }


    // Handle username suggestions

    if ($_POST['action'] === 'suggest') {

        $input = filter_var($_POST['username'] ?? '', FILTER_SANITIZE_EMAIL);

        $suggestions = [];


        foreach ($users as $username => $passwordHash) {

            if (stripos($username, $input) === 0) {

                $suggestions[] = $username;

            }

        }


        header('Content-Type: application/json');

        echo json_encode(['status' => 'success', 'suggestions' => $suggestions]);

        exit;

    }


    // Send JSON response for login and registration

    header('Content-Type: application/json');

    echo json_encode($response);

    exit;

}


// Handle logout

if (isset($_GET['logout'])) {

    session_destroy();

    setcookie($cookie_name, "", time() - 3600, "/");

    header('Location: ' . $_SERVER['PHP_SELF']);

    exit;

}


// Automatic login with remember me cookie

if (!isset($_SESSION['loggedin']) && isset($_COOKIE[$cookie_name])) {

    $token = $_COOKIE[$cookie_name];

    foreach ($users as $username => $data) {

        if (isset($data['remember_token']) && $data['remember_token'] === $token) {

            $_SESSION['loggedin'] = true;

            $_SESSION['username'] = htmlspecialchars($username);

            break;

        }

    }

}

?>



<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Login and Registration Form</title>

    <link rel="stylesheet" type="text/css" href="style.css"> <!-- Link to the CSS -->

   

    <!-- jQuery CDN -->

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script>

    $(document).ready(function () {

        // Handle login form submission via AJAX

        $('#login-form').on('submit', function (e) {

            e.preventDefault(); // Prevent traditional form submission

           

            // Send AJAX request for login

            $.ajax({

                type: 'POST',

                url: '', // The same page

                data: $(this).serialize(), // Serialize form data

                success: function (response) {

                    if (response.status === 'success') {

                        window.location.reload(); // Reload the page on successful login

                    } else {

                        $('#login-message').removeClass('success').addClass('error').text(response.message);

                    }

                },

                error: function () {

                    $('#login-message').removeClass('success').addClass('error').text('An error occurred.');

                }

            });

        });


        // Handle register form submission via AJAX

        $('#register-form').on('submit', function (e) {

            e.preventDefault(); // Prevent traditional form submission

           

            // Send AJAX request for registration

            $.ajax({

                type: 'POST',

                url: '', // The same page

                data: $(this).serialize(), // Serialize form data

                success: function (response) {

                    if (response.status === 'success') {

                        $('#register-message').removeClass('error').addClass('success').text(response.message);

                        // Clear input fields after submit

                        $('#register_username').val(''); // Clear the username input

                        $('#register_password').val(''); // Clear the password input

                        $('#login_suggestions').empty(); // Clear any login suggestions

                    } else {

                        $('#register-message').removeClass('success').addClass('error').text(response.message);

                    }

                },

                error: function () {

                    $('#register-message').removeClass('success').addClass('error').text('An error occurred.');

                }

            });

        });


        // Handle username input for login suggestions

        $('#username').on('input', function () {

            const input = $(this).val();

            if (input.length > 0) {

                // Send AJAX request for suggestions

                $.ajax({

                    type: 'POST',

                    url: '', // The same page

                    data: {

                        action: 'suggest',

                        username: input

                    },

                    success: function (response) {

                        if (response.status === 'success') {

                            // Display suggestions

                            $('#login_suggestions').empty();

                            if (response.suggestions.length > 0) {

                                response.suggestions.forEach(function (username) {

                                    $('#login_suggestions').append('<li class="suggestion-item" style="cursor: pointer;">' + username + '</li>');

                                });

                            } else {

                                $('#login_suggestions').append('<li>No suggestions available</li>');

                            }

                        }

                    }

                });

            } else {

                // Clear suggestions if input is empty

                $('#login_suggestions').empty();

            }

        });


        // Handle click on suggestion for login

        $(document).on('click', '#login_suggestions .suggestion-item', function () {

            const selectedUsername = $(this).text();

            $('#username').val(selectedUsername); // Set the input value to the selected username

            $('#login_suggestions').empty(); // Clear the suggestions

        });

    });

    </script>

</head>

<body style="background: url('Beezzz.jpg.webp'); background-size: cover; background-position: center; font-family: Arial, sans-serif; text-align: center; background-color: #f4f4f4; align-items: center;">


    <div style="background-color:#ebcb65; border-radius: 15px; padding: 30px; width: 355px; margin: 50px auto; box-shadow: 0 0 15px rgba(0, 0, 0, 0.1); border: 5px solid #df944f;">


<?php if (isset($_SESSION['loggedin']) && $_SESSION['loggedin']): ?>

    <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 50vh;">

        <h1 style="text-align: center;">Welcome, <?php echo htmlspecialchars($_SESSION['username']); ?>!</h1>

        <p style="text-align: center;">You are now logged in to our homepage.</p>

        <div style="margin-top: 10px; display: flex; flex-direction: row; gap: 10px;">

            <a href="homeprofile.php" style="text-decoration: none; background-color: #df944f; color: white; padding: 10px 15px; border-radius: 5px;">Home Profile</a>

            <a href="?logout=true" style="text-decoration: none; background-color: #df944f; color: white; padding: 10px 15px; border-radius: 5px;">Logout</a>

        </div>

    </div>

<?php else: ?>

        <h2 style="text-align: center;">Login Form</h2>


        <!-- Display login error/success message -->

        <p id="login-message" class="error"></p>


        <!-- Login form -->

        <form id="login-form">

            <input type="hidden" name="action" value="login">

            <label for="username">Username:</label>

            <input type="text" id="username" name="username" required>

            <ul id="login_suggestions" style="list-style: none; padding: 0; margin: 0; text-align: left;"></ul><br>

            <label for="password">Password:</label>

            <input type="password" id="password" name="password" required><br>

            <button type="submit">Login</button>

        </form>


        <h2 style="text-align: center;">Register Form</h2>


        <!-- Display register error/success message -->

        <p id="register-message" class="error"></p>


        <!-- Register form -->

        <form id="register-form">

            <input type="hidden" name="action" value="register">

            <label for="register_username">Username:</label>

            <input type="text" id="register_username" name="username" required><br>

            <label for="register_password">Password:</label>

            <input type="password" id="register_password" name="password" required><br>

            <button type="submit">Register</button>

        </form>

<?php endif; ?>

    </div>


    <!-- Footer -->

    <footer style="background-color: #333; color: white; padding: 10px; text-align: center; position: absolute; bottom: 0; width: 100%;">

        <p>&copy; 2024 Group_8/Exercise-6. All rights reserved.</p>

    </footer>


</body>

</html>




____________________________________________________________________________

END

____________________________________________________________________________




homeprofile.php



<?php

session_start(); // Start session at the top of the PHP file


// Check if the likes session variable is set; if not, initialize it

if (!isset($_SESSION['likes'])) {

    $_SESSION['likes'] = [];

}


// Load likes from cookies if they exist

if (isset($_COOKIE['likes'])) {

    $_SESSION['likes'] = json_decode($_COOKIE['likes'], true);

}


// Function to handle likes

function handleLike($name) {

    if (!in_array($name, $_SESSION['likes'])) {

        $_SESSION['likes'][] = $name; // Add name to likes if not already liked

    } else {

        $_SESSION['likes'] = array_diff($_SESSION['likes'], [$name]); // Remove name from likes if already liked

    }


    // Set/update the likes cookie

    setcookie('likes', json_encode($_SESSION['likes']), time() + (86400 * 30), "/"); // 30 days expiration

}


// Check if a like action was requested

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['like_name'])) {

    handleLike($_POST['like_name']);

}


$profiles = [

    ["name" => "Rennalien Oliva", "position" => "Team Leader", "email" => "olivarennalien_bsit@plmun.edu.ph", "image" => "rennalien.jfif", "facebook_url" => "https://www.facebook.com/rennalien.oliva.3"],

    ["name" => "Ellyza Galindo", "position" => "Developer", "email" => "galindoellyza_bsit@plmun.edu.ph", "image" => "Ellyza.jfif", "facebook_url" => "https://www.facebook.com/ellyzaa.galindo"],

    ["name" => "Jeric Mendoza", "position" => "Developer", "email" => "mendozajeric_bsit@plmun.edu.ph", "image" => "Jeric.jfif", "facebook_url" => "https://www.facebook.com/profile.php?id=100068864546897"],

    ["name" => "Sarahmel Ocado", "position" => "Designer", "email" => "ocadosarahmel_bsit@plmun.edu.ph", "image" => "sarahmel.jpg", "facebook_url" => "https://www.facebook.com/sarahmel.ocado.3"],

    ["name" => "McEphraem San Jose", "position" => "Designer", "email" => "sanjosemcephraem_bsit@plmun.edu.ph", "image" => "McEphraem.jfif", "facebook_url" => "https://www.facebook.com/mcephraemsanjose"],

    ["name" => "Norielyn Talavera", "position" => "Developer", "email" => "talaveranorielyn_bsit@plmun.edu.ph", "image" => "Norielyn.jpg.jfif", "facebook_url" => "https://www.facebook.com/norie.talavera?mibextid=ZbWKwL"]

];

?>


<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Team Profiles</title>

    <link rel="stylesheet" type="text/css" href="stylesheet.css"> <!-- Link to the CSS -->

</head>

<body>

    <header>

        <div class="container">

            <h1>Meet Our Team</h1>

        </div>

    </header>


    <div class="search-container">

        <input type="text" id="search-input" placeholder="Search for a team member...">

    </div>


    <div class="container">

        <?php foreach ($profiles as $profile): ?>

            <div class="profile" data-name="<?= strtolower($profile['name']) ?>">

                <img src="image/<?= $profile['image'] ?>" alt="<?= $profile['name'] ?>">

                <h2><?= $profile['name'] ?></h2>

                <p>Position: <?= $profile['position'] ?></p>

                <p><i>IE account: <?= $profile['email'] ?></i></p>

                <p><a href="<?= $profile['facebook_url'] ?>" target="_blank">View Facebook Profile</a></p>

               

                <!-- Reaction button -->

                <form method="POST" style="display:inline;">

                    <input type="hidden" name="like_name" value="<?= $profile['name'] ?>">

                    <button type="submit" style="background-color: <?= in_array($profile['name'], $_SESSION['likes']) ? '#ff9999' : '#cce5ff' ?>; border: none; border-radius: 5px; padding: 5px;">

                        <?= in_array($profile['name'], $_SESSION['likes']) ? 'Unlike' : 'Like' ?>

                    </button>

                </form>

            </div>

        <?php endforeach; ?>

    </div>


    <button onclick="goBack()" class="back-button">Go Back</button>


    <script>

        function goBack() {

            window.history.back();

        }


        // Search functionality

        document.getElementById('search-input').addEventListener('input', function() {

            const searchTerm = this.value.toLowerCase();

            const profiles = document.querySelectorAll('.profile');


            profiles.forEach(profile => {

                const name = profile.getAttribute('data-name');

                if (name.includes(searchTerm)) {

                    profile.style.display = ''; // Show profile

                } else {

                    profile.style.display = 'none'; // Hide profile

                }

            });

        });

    </script>

</body>

</html>




____________________________________________________________________________

END

____________________________________________________________________________




style.css for grp8.php



body {

    font-family: Arial, sans-serif;

    background-color: #d1661ff5;

    margin: 0;

    padding: 0;

    display: flex;

    justify-content: center;

    align-items: center;

    height: 100vh;

}


.error-message {

    text-align: center; /* Center align the text */

    color: red; /* Optional: color for visibility */

    margin: 20px 0; /* Optional: space above and below */

}


h1, h2  {

    text-align: right; /* Change to left or right as needed */

    color: #333; /* Optional: Change color */

    margin: 20px 0; /* Optional: Add some space above and below */

}


form {

    background: url('Beezzz.jpg.webp');

    background: #f7a859;

    padding: 20px;

    border-radius: 5px;

    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);

    width: 300px;

    margin: 10px;

}


label {

    display: block;

    margin-bottom: 8px;

    color: #555;

}


input[type="text"],

input[type="password"] {

    width: 100%;

    padding: 10px;

    margin-bottom: 15px;

    border: 1px solid #ddd;

    border-radius: 4px;

    box-sizing: border-box;

   

}


button {

    width: 100%;

    padding: 10px;

    background-color: #e07d2c;

    color: rgb(105, 99, 99);

    border: none;

    border-radius: 4px;

    cursor: pointer;

    font-size: 16px;

}


button:hover {

    background-color: #f8f8f8; /* to make login/register */

}


p {

    margin: 10px 0;


}


p a:hover {

    text-decoration: underline;

}


.error {

    color: red;

}


.success {

    color: green;

}






____________________________________________________________________________

END

____________________________________________________________________________




stylesheets.css for home profile.php




body {

    font-family: Arial, sans-serif;

    margin: 50px;

    padding: 100px;

    display: flex;

    flex-direction: column;

    align-items: center;

    background-color: #f8f4b3;

}


h1 {

    margin: 10px 0;

    text-align: center;

    width: 100%;

    font-size: 2em;

    font-weight: bold;

}


.container {

    display: flex;

    flex-direction: row;

    flex-wrap: wrap;

    justify-content: center;

    align-items: flex-start;

    width: 100%;

    max-width: 1200px;

    background-color: #f7d0d0;

    border-radius: 8px;

    box-shadow: 0 0 10px rgba(5, 0, 0, 0.1);

    padding: 10px;

    box-sizing: border-box;

    margin-top: 10px;

}


.search-container {

    margin: 20px;

    text-align: center;

}


#search-input {

    padding: 10px;

    border: 1px solid #ccc;

    border-radius: 4px;

    width: 300px;

    font-size: 1em;

}


.profile {

    flex: 1 1 30%;

    box-sizing: border-box;

    padding: 20px;

    text-align: center;

    margin: 10px;

    border-radius: 8px;

    background-color: #fcebeb;

    box-shadow: 0 0 5px rgba(10, 10, 10, 0.1);

}





.profile img {

    width: 100px;

    height: 100px;

    border-radius: 50%;

    object-fit: cover;

}


.profile h2 {

    margin: 10px 0 5px;

    font-size: 1.2em;

}


.profile p {

    margin: 5px 0;

    font-size: small;

}


.back-button {

    margin: 20px;

    padding: 10px 15px;

    background-color: #007BFF;

    color: white;

    border: none;

    border-radius: 5px;

    cursor: pointer;

    font-size: 1em;

}


.back-button:hover {

    background-color: #0056b3;

}


@media (max-width: 768px) {

    .profile {

        flex: 1 1 45%;

    }

}


@media (max-width: 480px) {

    .profile {

        flex: 1 1 100%;

    }

}

